/*____________________________________________________________
# Border Break Point Button Variables
____________________________________________________________*/
$borderPointBtnWidth: 200px;
$borderPointBtnHeight: ($borderPointBtnWidth / 100) * 32.5;

$borderPointWidth: 5px;
$borderPointBtnFontSize: $borderPointBtnHeight / 3.14;

$borderPointBtnTime: .3s;

/*____________________________________________________________
# Border Break Point Button
____________________________________________________________*/
.borderPointBtnWrap {
  position: relative;
  margin: 20px 25px;
  width: $borderPointBtnWidth;
  height: $borderPointBtnHeight;
  overflow: hidden;
  
  &:before,
  &:after {
    position: absolute;
    content: '';
    background-color: #fff;
    transition: top $borderPointBtnTime, bottom $borderPointBtnTime, left $borderPointBtnTime, right $borderPointBtnTime;
    z-index: 2;
  }
}
.borderPointBtn {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  font-family: "Roboto Slab";
  font-size: $borderPointBtnFontSize;
  font-weight: 900;
  text-transform: capitalize;
  border: $borderPointWidth solid #000;
  background-color: #fff;
  cursor: pointer;
  
  &:before,
  &:after {
    position: absolute;
    content: '';
    background-color: #fff;
    transition: top $borderPointBtnTime, bottom $borderPointBtnTime, left $borderPointBtnTime, right $borderPointBtnTime;
    z-index: 2;
  }
}

/*____________________________________________________________
## Border Break Point Mod
____________________________________________________________*/
.borderPointBtnWrap {
  
  /*____________________________________________________________
  ### Border Double Break Point Mod
  ____________________________________________________________*/
  @mixin borderDoublePointModMix($firstPointSide, $secondPointSide, $vertical: false) {
    &._#{$firstPointSide}_#{$secondPointSide} {
      &:before,
      &:after {
        @if $vertical == true {
          width: $borderPointWidth;
          height: calc(#{$borderPointWidth} * 1.5);
        } @else {
          width: calc(#{$borderPointWidth} * 1.5);
          height: $borderPointWidth;
        }
      }
      
      @if $vertical == true {
        &:before {
          #{$firstPointSide}: 20%;
          left: 0;
        }
        &:after {
          #{$secondPointSide}: 20%;
          right: 0;
        }
      } @else {
        &:before {
          top: 0;
          #{$firstPointSide}: 20%;
        }
        &:after {
          bottom: 0;
          #{$secondPointSide}: 20%;
        }
      }
      
      &:hover {
        &:before {
          #{$firstPointSide}: 70%;
        }
        &:after {
          #{$secondPointSide}: 70%;
        }
      }
    }
  }
  
  @include borderDoublePointModMix(left, right, $vertical: false);
  @include borderDoublePointModMix(right, left, $vertical: false);
  @include borderDoublePointModMix(top, bottom, $vertical: true);
  @include borderDoublePointModMix(bottom, top, $vertical: true);

  /*____________________________________________________________
  #### Border Quad Point Mod
  ____________________________________________________________*/
  @mixin borderQuadPointModMix($firstPointSide, $secondPointSide, $thirdPointSide, $fourthPointSide, $vertical: false) {
    &._#{$firstPointSide}_#{$secondPointSide}_#{$thirdPointSide}_#{$fourthPointSide} {

      // Inner
      .borderPointBtn {
        &:before,
        &:after {
          @if $vertical == false {
            width: $borderPointWidth;
            height: calc(#{$borderPointWidth} * 1.5);
          } @else {
            width: calc(#{$borderPointWidth} * 1.5);
            height: $borderPointWidth;
          }
        }

        @if $vertical == false {
          &:before {
            #{$thirdPointSide}: calc((-#{$borderPointWidth} * 1.5) * 2);
            left: -$borderPointWidth;
          }
          &:after {
            #{$fourthPointSide}: calc((-#{$borderPointWidth} * 1.5) * 2);
            right: -$borderPointWidth;
          }
        } @else {
          &:before {
            top: -$borderPointWidth;
            #{$thirdPointSide}: calc((-#{$borderPointWidth} * 1.5) * 2);
          }
          &:after {
            bottom: -$borderPointWidth;
            #{$fourthPointSide}: calc((-#{$borderPointWidth} * 1.5) * 2);
          }
        }

        &:hover {
          &:before,
          &:after {
            transition-delay: calc((#{$borderPointBtnTime} / 3) * 2);
          }
        }
      }

      // Outer
      &:before,
      &:after {
        @if $vertical == true {
          width: $borderPointWidth;
          height: calc(#{$borderPointWidth} * 1.5);
        } @else {
          width: calc(#{$borderPointWidth} * 1.5);
          height: $borderPointWidth;
        }
        transition-delay: calc((#{$borderPointBtnTime} / 3) * 2);
      }

      @if $vertical == true {
        &:before {
          #{$firstPointSide}: 20%;
          left: 0;
        }
        &:after {
          #{$secondPointSide}: 20%;
          right: 0;
        }
      } @else {
        &:before {
          top: 0;
          #{$firstPointSide}: 20%;
        }
        &:after {
          bottom: 0;
          #{$secondPointSide}: 20%;
        }
      }

      &:hover {
        &:before,
        &:after {
          transition-delay: 0s;
        }
        &:before {
          #{$firstPointSide}: 100%;
        }
        &:after {
          #{$secondPointSide}: 100%;
        }
        .borderPointBtn {
          &:before {
            #{$thirdPointSide}: 70%;
          }
          &:after {
            #{$fourthPointSide}: 70%;
          }
        }
      }
    }
  }

  @include borderQuadPointModMix(left, right, bottom, top, $vertical: false);
  @include borderQuadPointModMix(right, left, top, bottom, $vertical: false);
  @include borderQuadPointModMix(top, bottom, right, left, $vertical: true);
  @include borderQuadPointModMix(bottom, top, left, right, $vertical: true);
}