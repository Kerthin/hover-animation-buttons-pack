/*____________________________________________________________
# Circle Snake Buttons Variables
____________________________________________________________*/
$circleSnakeItemCount: 5;

$circleSnakeBtnWidth: 200px;
$circleSnakeBtnHeight: ($circleSnakeBtnWidth / 100) * 32.5;

$circleSnakeBtnFontSize: $circleSnakeBtnHeight / 2.03125;
$circleSnakeBtnShadowSize: ($circleSnakeBtnFontSize / 100) * 6.25;

$circleSnakeTime: .3s;

/*____________________________________________________________
# Circle Snake Buttons
____________________________________________________________*/
.circleSnakeBtn {
  position: relative;
  margin: 20px;
  width: $circleSnakeBtnWidth;
  height: $circleSnakeBtnHeight;
  background-color: #F2385A;
  overflow: hidden;
  cursor: pointer;
  
  &:hover {
    .circleSnake__wrap {
      &._rightStep,
      &._leftStep {
        .circleSnake__itemBox {
          &:nth-child(odd) {.circleSnake__item{transform: rotate(180deg);}}
          &:nth-child(even) {.circleSnake__item{transform: rotate(-180deg);}}
        }
      }
      &._rightStepInv,
      &._leftStepInv {
        .circleSnake__itemBox {
          &:nth-child(odd) {.circleSnake__item{transform: rotate(-180deg);}}
          &:nth-child(even) {.circleSnake__item{transform: rotate(180deg);}}
        }
      }
      &._rightStep,
      &._rightStepInv {
        .circleSnake__itemBox {
          @for $i from 1 through $circleSnakeItemCount {
            &:nth-child(#{$i}) {
              transition-delay: calc((-#{$circleSnakeTime} * #{$i}) + ((#{$circleSnakeTime} * #{$circleSnakeItemCount}) + #{$circleSnakeTime}));
              .circleSnake__item,
              .circleSnake__item:after{
                transition-delay: calc((-#{$circleSnakeTime} * #{$i}) + (#{$circleSnakeTime} * #{$circleSnakeItemCount}));
              }
            }
          }
        }
      }
      
      &._leftStep,
      &._leftStepInv {
        .circleSnake__itemBox {
          @for $i from 1 through $circleSnakeItemCount {
            &:nth-child(#{$i}) {
              transition-delay: calc(#{$i} * #{$circleSnakeTime});
              .circleSnake__item,.circleSnake__item:after{transition-delay: calc((#{$i} - 1) * #{$circleSnakeTime});}
            }
          }
        }
      }
    }
    .circleSnake__itemBox {
      opacity: 0;
      
      .circleSnake__item {
        &:after {
          opacity: 1;
        }
      }
    }
    .circleSnakeBtn__text {
      &._start {opacity: 0; transition-delay: 0s;}
      &._end {opacity: 1; transition-delay: calc((#{$circleSnakeTime} * #{$circleSnakeItemCount}) / 2);}
    }
  }
}
.circleSnake__wrap {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 100%;
  height: calc(#{$circleSnakeBtnWidth} / #{$circleSnakeItemCount});
  
  &._rightStep,
  &._rightStepInv {
    .circleSnake__itemBox {
      @for $i from 1 through $circleSnakeItemCount {
        &:nth-child(#{$i}) {
          transition-delay: calc((#{$i} - 1) * #{$circleSnakeTime});
          .circleSnake__item {
            transition-delay: calc((#{$i} - 1) * #{$circleSnakeTime});

            &:after{transition-delay: calc(#{$i} * #{$circleSnakeTime});}
          }
        }
      }
    }
    .circleSnake__item {
      &:after {
        right: -12.5%;
      }
    }
  }
  &._leftStep,
  &._leftStepInv {
    .circleSnake__itemBox {
      @for $i from 1 through $circleSnakeItemCount {
        &:nth-child(#{$i}) {
          transition-delay: calc((-#{$circleSnakeTime} * #{$i}) + (#{$circleSnakeTime} * #{$circleSnakeItemCount}));
          .circleSnake__item {
            transition-delay: calc((-#{$circleSnakeTime} * #{$i}) + (#{$circleSnakeTime} * #{$circleSnakeItemCount}));

            &:after{transition-delay: calc((-#{$circleSnakeTime} * #{$i}) + ((#{$circleSnakeTime} * #{$circleSnakeItemCount}) + #{$circleSnakeTime}));}
          }
        }
      }
    }
    .circleSnake__item {
      &:after {
        left: -12.5%;
      }
    }
  }
}
.circleSnake__itemBox {
  position: relative;
  float: left;
  width: calc(100% / #{$circleSnakeItemCount});
  height: calc(#{$circleSnakeBtnWidth} / #{$circleSnakeItemCount});
  opacity: 1;
}
.circleSnake__item {
  transform: rotate(0);
  width: 100%;
  height: 100%;
  border-radius: 50%;
  transition: transform $circleSnakeTime;
  transition-timing-function: linear;
  
  &:after {
    content: '';
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
    width: 25%;
    height: 25%;
    border-radius: 50%;
    background-color: #FFF5C3;
    opacity: 0;
  }
}

.circleSnakeBtn__text {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  line-height: $circleSnakeBtnHeight;
  font-family: 'Roboto Slab';
  font-size: $circleSnakeBtnFontSize;
  font-weight: 900;
  color: #4AD9D9;
  text-shadow: $circleSnakeBtnShadowSize $circleSnakeBtnShadowSize $circleSnakeBtnShadowSize #000;
  transition: opacity $circleSnakeTime;
  
  &._start {transition-delay: calc((#{$circleSnakeTime} * #{$circleSnakeItemCount}) / 2);}
  &._end {opacity: 0;}
}